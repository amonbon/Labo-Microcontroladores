gplink-1.5.0 #1285 (Sep 12 2016)
Copyright (c) 1998-2016 gputils project
Listing File Generated: 1-9-2023  23:32:32


Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 4.0.0 #11528 (MINGW64)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"firmware.c"
                                           	list	p=12f675
                                           	radix dec
                                           	include "p12f675.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC12F675 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	__modsint
                                           	extern	_TRISIO
                                           	extern	_GPIO
                                           	extern	_GPIObits
                                           	extern	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_main
                                           	global	_delay
                                           	global	_randomNum
                                           	global	_randomRange

                                           	global PSAVE
                                           	global SSAVE
                                           	global WSAVE
                                           	global STK12
                                           	global STK11
                                           	global STK10
                                           	global STK09
                                           	global STK08
                                           	global STK07
                                           	global STK06
                                           	global STK05
                                           	global STK04
                                           	global STK03
                                           	global STK02
                                           	global STK01
                                           	global STK00

                                           sharebank udata_ovr 0x0020
                                           PSAVE	res 1
                                           SSAVE	res 1
                                           WSAVE	res 1
                                           STK12	res 1
                                           STK11	res 1
                                           STK10	res 1
                                           STK09	res 1
                                           STK08	res 1
                                           STK07	res 1
                                           STK06	res 1
                                           STK05	res 1
                                           STK04	res 1
                                           STK03	res 1
                                           STK02	res 1
                                           STK01	res 1
                                           STK00	res 1

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_firmware_0	udata
                                           r0x100F	res	1
                                           r0x100E	res	1
                                           r0x1010	res	1
                                           r0x1007	res	1
                                           r0x1006	res	1
                                           r0x1008	res	1
                                           r0x1009	res	1
                                           r0x100A	res	1
                                           r0x100B	res	1
                                           r0x100C	res	1
                                           r0x100D	res	1
                                           r0x1001	res	1
                                           r0x1000	res	1
                                           r0x1003	res	1
                                           r0x1002	res	1
                                           r0x1005	res	1
                                           r0x1004	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized absolute data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; reset vector 
                                           ;--------------------------------------------------------
                                           STARTUP	code 0x0000
000000   0000     nop                      	nop
                                           	pagesel __sdcc_gsinit_startup
000001   2802     goto    0x0002           	goto	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_firmware	code
                                           ;***
                                           ;  pBlock Stats: dbName = M
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _randomNum
                                           ;   _randomRange
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _randomRange
                                           ;   _randomNum
                                           ;   _randomRange
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _delay
                                           ;   _randomRange
                                           ;8 compiler assigned registers:
                                           ;   r0x100E
                                           ;   STK00
                                           ;   r0x100F
                                           ;   STK04
                                           ;   STK03
                                           ;   STK02
                                           ;   STK01
                                           ;   r0x1010
                                           ;; Starting pCode block
                                           S_firmware__main	code
                                           _main:
                                           ; 2 exit points
                                           ;	.line	32; "firmware.c"	TRISIO = 0b00000000; //Poner todos los pines como salidas
00009e   1683     bsf     0x03, 0x5        	BANKSEL	_TRISIO
00009f   0185     clrf    0x05             	CLRF	_TRISIO
                                           ;	.line	33; "firmware.c"	GPIO = 0x00; //Poner pines en bajo
0000a0   1283     bcf     0x03, 0x5        	BANKSEL	_GPIO
0000a1   0185     clrf    0x05             	CLRF	_GPIO
                                           ;	.line	35; "firmware.c"	int lower = 1, upper = 6, aleatorio = randomNum();
                                           	PAGESEL	_randomNum
0000a2   225d     call    0x025d           	CALL	_randomNum
                                           	PAGESEL	$
0000a3   00b1     movwf   0x31             	MOVWF	r0x100E
0000a4   082f     movf    0x2f, 0x0        	MOVF	STK00,W
                                           ;	.line	37; "firmware.c"	aleatorio = randomRange(lower, upper, aleatorio);
0000a5   00b0     movwf   0x30             	MOVWF	r0x100F
0000a6   00ab     movwf   0x2b             	MOVWF	STK04
0000a7   0831     movf    0x31, 0x0        	MOVF	r0x100E,W
0000a8   00ac     movwf   0x2c             	MOVWF	STK03
0000a9   3006     movlw   0x06             	MOVLW	0x06
0000aa   00ad     movwf   0x2d             	MOVWF	STK02
0000ab   3000     movlw   0x00             	MOVLW	0x00
0000ac   00ae     movwf   0x2e             	MOVWF	STK01
0000ad   3001     movlw   0x01             	MOVLW	0x01
0000ae   00af     movwf   0x2f             	MOVWF	STK00
0000af   3000     movlw   0x00             	MOVLW	0x00
                                           	PAGESEL	_randomRange
0000b0   2204     call    0x0204           	CALL	_randomRange
                                           	PAGESEL	$
0000b1   00b1     movwf   0x31             	MOVWF	r0x100E
0000b2   082f     movf    0x2f, 0x0        	MOVF	STK00,W
0000b3   00b0     movwf   0x30             	MOVWF	r0x100F
                                           _00115_DS_:
                                           ;	.line	42; "firmware.c"	if(GP3)
0000b4   1283     bcf     0x03, 0x5        	BANKSEL	_GPIObits
0000b5   1d85     btfss   0x05, 0x3        	BTFSS	_GPIObits,3
0000b6   2911     goto    0x0111           	GOTO	_00113_DS_
                                           ;;signed compare: left < lit(0x1=1), size=2, mask=ffff
                                           ;	.line	44; "firmware.c"	switch (aleatorio)
0000b7   0831     movf    0x31, 0x0        	MOVF	r0x100E,W
0000b8   3e80     addlw   0x80             	ADDLW	0x80
0000b9   3e80     addlw   0x80             	ADDLW	0x80
0000ba   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000bb   28be     goto    0x00be           	GOTO	_00139_DS_
0000bc   3001     movlw   0x01             	MOVLW	0x01
0000bd   0230     subwf   0x30, 0x0        	SUBWF	r0x100F,W
                                           _00139_DS_:
0000be   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0000bf   2911     goto    0x0111           	GOTO	_00113_DS_
                                           ;;genSkipc:3307: created from rifx:00000000047A5780
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;signed compare: left >= lit(0x7=7), size=2, mask=ffff
0000c0   0831     movf    0x31, 0x0        	MOVF	r0x100E,W
0000c1   3e80     addlw   0x80             	ADDLW	0x80
0000c2   3e80     addlw   0x80             	ADDLW	0x80
0000c3   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000c4   28c7     goto    0x00c7           	GOTO	_00140_DS_
0000c5   3007     movlw   0x07             	MOVLW	0x07
0000c6   0230     subwf   0x30, 0x0        	SUBWF	r0x100F,W
                                           _00140_DS_:
0000c7   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0000c8   2911     goto    0x0111           	GOTO	_00113_DS_
                                           ;;genSkipc:3307: created from rifx:00000000047A5780
0000c9   0330     decf    0x30, 0x0        	DECF	r0x100F,W
0000ca   00b2     movwf   0x32             	MOVWF	r0x1010
0000cb   3000     movlw   0x00             	MOVLW	HIGH(_00141_DS_)
0000cc   008a     movwf   0x0a             	MOVWF	PCLATH
0000cd   30d2     movlw   0xd2             	MOVLW	_00141_DS_
0000ce   0732     addwf   0x32, 0x0        	ADDWF	r0x1010,W
0000cf   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0000d0   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
0000d1   0082     movwf   0x02             	MOVWF	PCL
                                           _00141_DS_:
0000d2   28d8     goto    0x00d8           	GOTO	_00105_DS_
0000d3   28e1     goto    0x00e1           	GOTO	_00106_DS_
0000d4   28ea     goto    0x00ea           	GOTO	_00107_DS_
0000d5   28f4     goto    0x00f4           	GOTO	_00108_DS_
0000d6   28fe     goto    0x00fe           	GOTO	_00109_DS_
0000d7   2908     goto    0x0108           	GOTO	_00110_DS_
                                           _00105_DS_:
                                           ;	.line	47; "firmware.c"	GP0 = 1;
0000d8   1283     bcf     0x03, 0x5        	BANKSEL	_GPIObits
0000d9   1405     bsf     0x05, 0x0        	BSF	_GPIObits,0
                                           ;	.line	48; "firmware.c"	delay(time);
0000da   30f4     movlw   0xf4             	MOVLW	0xf4
0000db   00af     movwf   0x2f             	MOVWF	STK00
0000dc   3001     movlw   0x01             	MOVLW	0x01
                                           	PAGESEL	_delay
0000dd   222e     call    0x022e           	CALL	_delay
                                           	PAGESEL	$
                                           ;	.line	49; "firmware.c"	GP0 = 0;
0000de   1283     bcf     0x03, 0x5        	BANKSEL	_GPIObits
0000df   1005     bcf     0x05, 0x0        	BCF	_GPIObits,0
                                           ;	.line	50; "firmware.c"	break;
0000e0   2911     goto    0x0111           	GOTO	_00113_DS_
                                           _00106_DS_:
                                           ;	.line	53; "firmware.c"	GP1 = 1;
0000e1   1283     bcf     0x03, 0x5        	BANKSEL	_GPIObits
0000e2   1485     bsf     0x05, 0x1        	BSF	_GPIObits,1
                                           ;	.line	54; "firmware.c"	delay(time);
0000e3   30f4     movlw   0xf4             	MOVLW	0xf4
0000e4   00af     movwf   0x2f             	MOVWF	STK00
0000e5   3001     movlw   0x01             	MOVLW	0x01
                                           	PAGESEL	_delay
0000e6   222e     call    0x022e           	CALL	_delay
                                           	PAGESEL	$
                                           ;	.line	55; "firmware.c"	GP1 = 0;
0000e7   1283     bcf     0x03, 0x5        	BANKSEL	_GPIObits
0000e8   1085     bcf     0x05, 0x1        	BCF	_GPIObits,1
                                           ;	.line	56; "firmware.c"	break;
0000e9   2911     goto    0x0111           	GOTO	_00113_DS_
                                           _00107_DS_:
                                           ;	.line	59; "firmware.c"	GPIO = 0b00000011;
0000ea   3003     movlw   0x03             	MOVLW	0x03
0000eb   1283     bcf     0x03, 0x5        	BANKSEL	_GPIO
0000ec   0085     movwf   0x05             	MOVWF	_GPIO
                                           ;	.line	60; "firmware.c"	delay(time);
0000ed   30f4     movlw   0xf4             	MOVLW	0xf4
0000ee   00af     movwf   0x2f             	MOVWF	STK00
0000ef   3001     movlw   0x01             	MOVLW	0x01
                                           	PAGESEL	_delay
0000f0   222e     call    0x022e           	CALL	_delay
                                           	PAGESEL	$
                                           ;	.line	61; "firmware.c"	GPIO = 0b00000000;
0000f1   1283     bcf     0x03, 0x5        	BANKSEL	_GPIO
0000f2   0185     clrf    0x05             	CLRF	_GPIO
                                           ;	.line	62; "firmware.c"	break;
0000f3   2911     goto    0x0111           	GOTO	_00113_DS_
                                           _00108_DS_:
                                           ;	.line	65; "firmware.c"	GPIO = 0b00000110;
0000f4   3006     movlw   0x06             	MOVLW	0x06
0000f5   1283     bcf     0x03, 0x5        	BANKSEL	_GPIO
0000f6   0085     movwf   0x05             	MOVWF	_GPIO
                                           ;	.line	66; "firmware.c"	delay(time);
0000f7   30f4     movlw   0xf4             	MOVLW	0xf4
0000f8   00af     movwf   0x2f             	MOVWF	STK00
0000f9   3001     movlw   0x01             	MOVLW	0x01
                                           	PAGESEL	_delay
0000fa   222e     call    0x022e           	CALL	_delay
                                           	PAGESEL	$
                                           ;	.line	67; "firmware.c"	GPIO = 0b00000000;
0000fb   1283     bcf     0x03, 0x5        	BANKSEL	_GPIO
0000fc   0185     clrf    0x05             	CLRF	_GPIO
                                           ;	.line	68; "firmware.c"	break;
0000fd   2911     goto    0x0111           	GOTO	_00113_DS_
                                           _00109_DS_:
                                           ;	.line	71; "firmware.c"	GPIO = 0b00000111;
0000fe   3007     movlw   0x07             	MOVLW	0x07
0000ff   1283     bcf     0x03, 0x5        	BANKSEL	_GPIO
000100   0085     movwf   0x05             	MOVWF	_GPIO
                                           ;	.line	72; "firmware.c"	delay(time);
000101   30f4     movlw   0xf4             	MOVLW	0xf4
000102   00af     movwf   0x2f             	MOVWF	STK00
000103   3001     movlw   0x01             	MOVLW	0x01
                                           	PAGESEL	_delay
000104   222e     call    0x022e           	CALL	_delay
                                           	PAGESEL	$
                                           ;	.line	73; "firmware.c"	GPIO = 0b00000000;
000105   1283     bcf     0x03, 0x5        	BANKSEL	_GPIO
000106   0185     clrf    0x05             	CLRF	_GPIO
                                           ;	.line	74; "firmware.c"	break;
000107   2911     goto    0x0111           	GOTO	_00113_DS_
                                           _00110_DS_:
                                           ;	.line	77; "firmware.c"	GPIO = 0b00010110;
000108   3016     movlw   0x16             	MOVLW	0x16
000109   1283     bcf     0x03, 0x5        	BANKSEL	_GPIO
00010a   0085     movwf   0x05             	MOVWF	_GPIO
                                           ;	.line	78; "firmware.c"	delay(time);
00010b   30f4     movlw   0xf4             	MOVLW	0xf4
00010c   00af     movwf   0x2f             	MOVWF	STK00
00010d   3001     movlw   0x01             	MOVLW	0x01
                                           	PAGESEL	_delay
00010e   222e     call    0x022e           	CALL	_delay
                                           	PAGESEL	$
                                           ;	.line	79; "firmware.c"	GPIO = 0b00000000;
00010f   1283     bcf     0x03, 0x5        	BANKSEL	_GPIO
000110   0185     clrf    0x05             	CLRF	_GPIO
                                           _00113_DS_:
                                           ;	.line	88; "firmware.c"	aleatorio = randomRange(lower, upper, aleatorio);		
000111   0830     movf    0x30, 0x0        	MOVF	r0x100F,W
000112   00ab     movwf   0x2b             	MOVWF	STK04
000113   0831     movf    0x31, 0x0        	MOVF	r0x100E,W
000114   00ac     movwf   0x2c             	MOVWF	STK03
000115   3006     movlw   0x06             	MOVLW	0x06
000116   00ad     movwf   0x2d             	MOVWF	STK02
000117   3000     movlw   0x00             	MOVLW	0x00
000118   00ae     movwf   0x2e             	MOVWF	STK01
000119   3001     movlw   0x01             	MOVLW	0x01
00011a   00af     movwf   0x2f             	MOVWF	STK00
00011b   3000     movlw   0x00             	MOVLW	0x00
                                           	PAGESEL	_randomRange
00011c   2204     call    0x0204           	CALL	_randomRange
                                           	PAGESEL	$
00011d   00b1     movwf   0x31             	MOVWF	r0x100E
00011e   082f     movf    0x2f, 0x0        	MOVF	STK00,W
00011f   00b0     movwf   0x30             	MOVWF	r0x100F
000120   28b4     goto    0x00b4           	GOTO	_00115_DS_
                                           ;	.line	91; "firmware.c"	}
000121   0008     return                   	RETURN	
                                           ; exit point of _main

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __modsint
                                           ;   __modsint
                                           ;11 compiler assigned registers:
                                           ;   r0x1000
                                           ;   STK00
                                           ;   r0x1001
                                           ;   STK01
                                           ;   r0x1002
                                           ;   STK02
                                           ;   r0x1003
                                           ;   STK03
                                           ;   r0x1004
                                           ;   STK04
                                           ;   r0x1005
                                           ;; Starting pCode block
                                           S_firmware__randomRange	code
                                           _randomRange:
                                           ; 2 exit points
                                           ;	.line	110; "firmware.c"	int randomRange( int min, int max, int past_num )  
000204   00bc     movwf   0x3c             	MOVWF	r0x1000
000205   082f     movf    0x2f, 0x0        	MOVF	STK00,W
000206   00bb     movwf   0x3b             	MOVWF	r0x1001
000207   082e     movf    0x2e, 0x0        	MOVF	STK01,W
000208   00be     movwf   0x3e             	MOVWF	r0x1002
000209   082d     movf    0x2d, 0x0        	MOVF	STK02,W
00020a   00bd     movwf   0x3d             	MOVWF	r0x1003
00020b   082c     movf    0x2c, 0x0        	MOVF	STK03,W
00020c   00c0     movwf   0x40             	MOVWF	r0x1004
00020d   082b     movf    0x2b, 0x0        	MOVF	STK04,W
00020e   00bf     movwf   0x3f             	MOVWF	r0x1005
                                           ;	.line	112; "firmware.c"	return past_num % (max+1-min) + min ;  
00020f   0abd     incf    0x3d, 0x1        	INCF	r0x1003,F
000210   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000211   0abe     incf    0x3e, 0x1        	INCF	r0x1002,F
000212   083b     movf    0x3b, 0x0        	MOVF	r0x1001,W
000213   02bd     subwf   0x3d, 0x1        	SUBWF	r0x1003,F
000214   083c     movf    0x3c, 0x0        	MOVF	r0x1000,W
000215   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000216   0f3c     incfsz  0x3c, 0x0        	INCFSZ	r0x1000,W
000217   02be     subwf   0x3e, 0x1        	SUBWF	r0x1002,F
000218   083d     movf    0x3d, 0x0        	MOVF	r0x1003,W
000219   00ad     movwf   0x2d             	MOVWF	STK02
00021a   083e     movf    0x3e, 0x0        	MOVF	r0x1002,W
00021b   00ae     movwf   0x2e             	MOVWF	STK01
00021c   083f     movf    0x3f, 0x0        	MOVF	r0x1005,W
00021d   00af     movwf   0x2f             	MOVWF	STK00
00021e   0840     movf    0x40, 0x0        	MOVF	r0x1004,W
                                           	PAGESEL	__modsint
00021f   2122     call    0x0122           	CALL	__modsint
                                           	PAGESEL	$
000220   00be     movwf   0x3e             	MOVWF	r0x1002
000221   082f     movf    0x2f, 0x0        	MOVF	STK00,W
000222   00bd     movwf   0x3d             	MOVWF	r0x1003
000223   083b     movf    0x3b, 0x0        	MOVF	r0x1001,W
000224   073d     addwf   0x3d, 0x0        	ADDWF	r0x1003,W
000225   00bb     movwf   0x3b             	MOVWF	r0x1001
000226   083e     movf    0x3e, 0x0        	MOVF	r0x1002,W
000227   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000228   0f3e     incfsz  0x3e, 0x0        	INCFSZ	r0x1002,W
000229   07bc     addwf   0x3c, 0x1        	ADDWF	r0x1000,F
00022a   083b     movf    0x3b, 0x0        	MOVF	r0x1001,W
00022b   00af     movwf   0x2f             	MOVWF	STK00
00022c   083c     movf    0x3c, 0x0        	MOVF	r0x1000,W
                                           ;	.line	113; "firmware.c"	}
00022d   0008     return                   	RETURN	
                                           ; exit point of _randomRange

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;1 compiler assigned register :
                                           ;   STK00
                                           ;; Starting pCode block
                                           S_firmware__randomNum	code
                                           _randomNum:
                                           ; 2 exit points
                                           ;	.line	107; "firmware.c"	return next ; 
00025d   30ff     movlw   0xff             	MOVLW	0xff
00025e   00af     movwf   0x2f             	MOVWF	STK00
00025f   30fe     movlw   0xfe             	MOVLW	0xfe
                                           ;	.line	108; "firmware.c"	} 
000260   0008     return                   	RETURN	
                                           ; exit point of _randomNum

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;9 compiler assigned registers:
                                           ;   r0x1006
                                           ;   STK00
                                           ;   r0x1007
                                           ;   r0x1008
                                           ;   r0x1009
                                           ;   r0x100A
                                           ;   r0x100B
                                           ;   r0x100C
                                           ;   r0x100D
                                           ;; Starting pCode block
                                           S_firmware__delay	code
                                           _delay:
                                           ; 2 exit points
                                           ;	.line	93; "firmware.c"	void delay(unsigned int tiempo)
00022e   00b4     movwf   0x34             	MOVWF	r0x1006
00022f   082f     movf    0x2f, 0x0        	MOVF	STK00,W
000230   00b3     movwf   0x33             	MOVWF	r0x1007
                                           ;	.line	98; "firmware.c"	for(i=0;i<tiempo;i++)
000231   01b5     clrf    0x35             	CLRF	r0x1008
000232   01b6     clrf    0x36             	CLRF	r0x1009
                                           _00152_DS_:
000233   0834     movf    0x34, 0x0        	MOVF	r0x1006,W
000234   0236     subwf   0x36, 0x0        	SUBWF	r0x1009,W
000235   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000236   2a39     goto    0x0239           	GOTO	_00173_DS_
000237   0833     movf    0x33, 0x0        	MOVF	r0x1007,W
000238   0235     subwf   0x35, 0x0        	SUBWF	r0x1008,W
                                           _00173_DS_:
000239   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00023a   2a54     goto    0x0254           	GOTO	_00154_DS_
                                           ;;genSkipc:3307: created from rifx:00000000047A5780
                                           ;	.line	99; "firmware.c"	for(j=0;j<1275;j++);
00023b   30fb     movlw   0xfb             	MOVLW	0xfb
00023c   00b7     movwf   0x37             	MOVWF	r0x100A
00023d   3004     movlw   0x04             	MOVLW	0x04
00023e   00b8     movwf   0x38             	MOVWF	r0x100B
                                           _00150_DS_:
00023f   30ff     movlw   0xff             	MOVLW	0xff
000240   0737     addwf   0x37, 0x0        	ADDWF	r0x100A,W
000241   00b9     movwf   0x39             	MOVWF	r0x100C
000242   30ff     movlw   0xff             	MOVLW	0xff
000243   00ba     movwf   0x3a             	MOVWF	r0x100D
000244   0838     movf    0x38, 0x0        	MOVF	r0x100B,W
000245   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000246   0f38     incfsz  0x38, 0x0        	INCFSZ	r0x100B,W
000247   07ba     addwf   0x3a, 0x1        	ADDWF	r0x100D,F
000248   0839     movf    0x39, 0x0        	MOVF	r0x100C,W
000249   00b7     movwf   0x37             	MOVWF	r0x100A
00024a   083a     movf    0x3a, 0x0        	MOVF	r0x100D,W
00024b   00b8     movwf   0x38             	MOVWF	r0x100B
00024c   083a     movf    0x3a, 0x0        	MOVF	r0x100D,W
00024d   0439     iorwf   0x39, 0x0        	IORWF	r0x100C,W
00024e   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00024f   2a3f     goto    0x023f           	GOTO	_00150_DS_
                                           ;	.line	98; "firmware.c"	for(i=0;i<tiempo;i++)
000250   0ab5     incf    0x35, 0x1        	INCF	r0x1008,F
000251   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000252   0ab6     incf    0x36, 0x1        	INCF	r0x1009,F
000253   2a33     goto    0x0233           	GOTO	_00152_DS_
                                           _00154_DS_:
                                           ;	.line	100; "firmware.c"	}
000254   0008     return                   	RETURN	
                                           ; exit point of _delay


                                           ;	code size estimation:
                                           ;	  202+   35 =   237 instructions (  544 byte)

                                           	end
